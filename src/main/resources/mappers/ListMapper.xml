<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.greedy.thunderbolts.model.dao.ListMapper">

    <resultMap id="productResultMap" type="com.greedy.thunderbolts.model.dto.ProductDTO">
        <id property="productCode" column="PRODUCT_CODE"/>
        <result property="productName" column="PRODUCT_NAME"/>
        <result property="productNameKr" column="PRODUCT_NAME_KR"/>
        <result property="productEntryDate" column="PRODUCT_ENTRY_DATE"/>
        <result property="categoriesCode" column="CATEGORIES_CODE"/>
        <result property="brandNo" column="BRAND_NO"/>
        <result property="productCount" column="PRODUCT_COUNT"/>
        <collection property="productOption" resultMap="productOptionResultMap"/>

    </resultMap>

    <resultMap id="productOptionResultMap" type="com.greedy.thunderbolts.model.dto.ProductOptionDTO">
        <id property="productOptionCode" column="PRODUCT_OPTION_CODE"/>
        <result property="productCode" column="PRODUCT_CODE"/>
        <result property="productOptionColor" column="PRODUCT_OPTION_COLOR"/>
        <result property="productOptionSize" column="PRODUCT_OPTION_SIZE"/>
        <result property="productOptionEtc" column="PRODUCT_OPTION_ETC"/>
        <result property="productOptionQuantitiy" column="PRODUCT_OPTION_QUANTITIY"/>
        <collection property="sellingOrders" resultMap="sellingOrderResultMap"/>
        <collection property="buyingOrders" resultMap="buyingOrderResultMap"/>
    </resultMap>

    <resultMap id="sellingOrderResultMap" type="com.greedy.thunderbolts.model.dto.SellingOrdersDTO">
        <id property="sellingOrderNo" column="SELLINGORDER_NO"/>
        <result property="productOptionCode" column="PRODUCT_OPTION_CODE"/>
        <result property="membersNo" column="MEMBERS_NO"/>
        <result property="sellingOrderDate" column="SELLINGORDER_DATE"/>
        <result property="sellingOrderPrice" column="SELLINGORDER_PRICE"/>
        <result property="sellingOrderStatus" column="SELLINGORDER_STATUS"/>
        <result property="sellingOrderCancellationDate" column="SELLINGORDER_CANCELLATION_DATE"/>
        <result property="sellingOrderSuccessingDate" column="SELLINGORDER_SUCCESSING_DATE"/>
        <result property="sellingOrderDeadlineDate" column="SELLING_ORDER_DEADLINE_DATE"/>

    </resultMap>

    <resultMap id="buyingOrderResultMap" type="com.greedy.thunderbolts.model.dto.BuyingOrdersDTO">
        <id property="buyingOrderCode" column="BUYING_ORDER_CODE"/>
        <result property="membersNo" column="MEMBERS_NO"/>
        <result property="productOptionCode" column="PRODUCT_OPTION_CODE"/>
        <result property="buyingOrderRegistdate" column="BUYING_ORDER_REGISTDATE"/>
        <result property="buyingOrderPrice" column="BUYING_ORDER_PRICE"/>
        <result property="buyingOrderStatus" column="BUYING_ORDER_STATUS"/>
        <result property="buyingOrderCancellationDate" column="BUYING_ORDER_CANCELLATION_DATE"/>
        <result property="buyingOrderSuccessingDate" column="BUYING_ORDER_SUCCESSING_DATE"/>
        <result property="buyingOrderDeadlineDate" column="BUYING_ORDER_DEADLINE_DATE"/>
    </resultMap>
    
    	<!-- 내정보관리 memberDTO -->
	<resultMap id="membersResultMap" type="com.greedy.thunderbolts.model.dto.MembersDTO">
		<id property="membersNo" column="MEMBERS_NO"/>
		<result property="membersName" column="MEMBERS_NAME"/>
		<result property="membersId" column="MEMBERS_ID"/>
		<result property="membersPwd" column="MEMBERS_PWD"/>
		<result property="membersTel" column="MEMBERS_TEL"/>
		<result property="membersRegDate" column="MEMBERS_REG_DATE"/>
		<result property="membersEntire" column="MEMBERS_ENTIRE"/>
	
		<collection property="authRoleList" resultMap="authRoleResultMap"/>
	</resultMap>
    
    <resultMap id="addressResultMap" type="com.greedy.thunderbolts.model.dto.mypageDTO.AddressDTO">
	    <result property="addressesNo" column="ADDRESSES_NO" />
	    <result property="receiverName" column="RECEIVER_NAME" />
	    <result property="addressesPostNo" column="ADDRESSES_POST_NO" />
	    <result property="addressesName" column="ADDRESSES_NAME" />
	    <result property="addressesAdds" column="ADDRESSES_ADDS" />
	</resultMap>


    <!--결과적으로 PRODUCT_CODE=99인 상품의 PRODUCT_NAME,
    PRODUCT_NAME_KR, SELLINGORDER_PRICE, SELLINGORDER_NO, MIN(O.PRODUCT_OPTION_SIZE)을 조회-->
    <select id="findProduct" resultMap="productResultMap">
        SELECT
        P.PRODUCT_CODE,
        P.PRODUCT_NAME,
        P.PRODUCT_NAME_KR,
        COALESCE(MIN(O.PRODUCT_OPTION_SIZE), '') AS PRODUCT_OPTION_SIZE,
        COALESCE(MAX(S.SELLINGORDER_PRICE), 0) AS SELLINGORDER_PRICE,
        S.SELLINGORDER_NO
        FROM PRODUCT P
        LEFT JOIN PRODUCT_OPTION O ON (P.PRODUCT_CODE = O.PRODUCT_CODE)
        LEFT JOIN SELLING_ORDERS S ON (O.PRODUCT_OPTION_CODE = S.PRODUCT_OPTION_CODE)
        WHERE O.PRODUCT_CODE='#{productCode}
        GROUP BY
        P.PRODUCT_CODE,
        P.PRODUCT_NAME,
        P.PRODUCT_NAME_KR,
        S.SELLINGORDER_PRICE,
        S.SELLINGORDER_NO
        ORDER BY PRODUCT_OPTION_SIZE ASC
    </select>

    <!--결과적으로 PRODUCT_CODE=99인 상품의 PRODUCT_NAME,
    PRODUCT_NAME_KR, SELLINGORDER_PRICE, SELLINGORDER_NO, MIN(O.PRODUCT_OPTION_SIZE)을 조회-->
    <select id="findSizePrice" resultMap="productResultMap">
        SELECT
        P.PRODUCT_CODE,
        P.PRODUCT_NAME,
        P.PRODUCT_NAME_KR,
        COALESCE(MIN(O.PRODUCT_OPTION_SIZE), '') AS PRODUCT_OPTION_SIZE,
        COALESCE(MAX(S.SELLINGORDER_PRICE), 0) AS SELLINGORDER_PRICE,
        S.SELLINGORDER_NO
        FROM PRODUCT P
        LEFT JOIN PRODUCT_OPTION O ON (P.PRODUCT_CODE = O.PRODUCT_CODE)
        LEFT JOIN SELLING_ORDERS S ON (O.PRODUCT_OPTION_CODE = S.PRODUCT_OPTION_CODE)
        WHERE O.PRODUCT_CODE=#{productCode}
        GROUP BY
        P.PRODUCT_CODE,
        P.PRODUCT_NAME,
        P.PRODUCT_NAME_KR,
        S.SELLINGORDER_PRICE,
        S.SELLINGORDER_NO
        ORDER BY PRODUCT_OPTION_SIZE ASC

    </select>

        <!--입력(선택)으로 받은 sellingOrderNo에 해당하는 판매 주문서(SELLING_ORDERS)의 정보-->
    <select id="findSellingProduct" resultMap="productResultMap">

        SELECT P.PRODUCT_CODE,
        p.PRODUCT_NAME,
        p.PRODUCT_NAME_KR,
        (SELECT o.PRODUCT_OPTION_COLOR
        FROM PRODUCT_OPTION o
        WHERE o.PRODUCT_OPTION_CODE = s.PRODUCT_OPTION_CODE) AS PRODUCT_OPTION_COLOR,
        (SELECT o.PRODUCT_OPTION_SIZE
        FROM PRODUCT_OPTION o
        WHERE o.PRODUCT_OPTION_CODE = s.PRODUCT_OPTION_CODE) AS PRODUCT_OPTION_SIZE,
        s.SELLINGORDER_PRICE
        FROM PRODUCT p,
        PRODUCT_OPTION po,
        SELLING_ORDERS s
        WHERE s.SELLINGORDER_NO = #{sellingOrderNo}
        AND po.PRODUCT_OPTION_CODE = s.PRODUCT_OPTION_CODE
        AND p.PRODUCT_CODE = po.PRODUCT_CODE

    </select>

    <!--입력받은 sellingOrderNo에 해당하는 판매 주문에 대한 상품 옵션 정보와 가격을 조회하는 쿼리-->
    <select id="findSellingProduct2" resultMap="productResultMap">

        SELECT
        po.PRODUCT_OPTION_SIZE,
        s.SELLINGORDER_PRICE
        FROM PRODUCT_OPTION po
        INNER JOIN SELLING_ORDERS s
        ON po.PRODUCT_OPTION_CODE = s.PRODUCT_OPTION_CODE
        WHERE s.SELLINGORDER_NO = #{sellingOrderNo}

    </select>
    <!--제품 코드가 99인 상품에 대해, 상품 옵션 크기가 #{productOptionSize}인 모든 상품 옵션 정보를 조회하는 쿼리-->
    <select id="findProductOptionSize" resultMap="productResultMap">
        SELECT P.PRODUCT_CODE,
        P.PRODUCT_NAME,
        P.PRODUCT_NAME_KR,
        PO.PRODUCT_OPTION_COLOR,
        PO.PRODUCT_OPTION_SIZE
        FROM PRODUCT P,
        PRODUCT_OPTION PO
        WHERE PO.PRODUCT_OPTION_SIZE = #{productOptionSize}
        AND P.PRODUCT_CODE = PO.PRODUCT_CODE
        AND P.PRODUCT_CODE = #{productCode}
    </select>

    <!--PRODUCT_CODE가 99인 상품과 PRODUCT_OPTION 테이블의 해당 PRODUCT_OPTION_SIZE를 조건으로 사용하여 데이터를 조회합니다.
    또한, buyingOrderPrice와 buyingOrderDeadlineDate는 조회된 결과에 고정된 값으로 추가
    이렇게 조회된 결과는 ProductDTO 객체에 매핑-->
    <select id="finalBuyBidOrderPage" resultMap="productResultMap">
        SELECT P.PRODUCT_CODE,
        P.PRODUCT_NAME,
        P.PRODUCT_NAME_KR,
        PO.PRODUCT_OPTION_COLOR,
        PO.PRODUCT_OPTION_SIZE,
        #{buyingOrderPrice} AS BUYING_ORDER_PRICE,
        #{buyingOrderDeadlineDate} AS BUYING_ORDER_DEADLINE_DATE
        FROM PRODUCT P,
        PRODUCT_OPTION PO
        WHERE PO.PRODUCT_OPTION_SIZE = #{productOptionSize}
        AND P.PRODUCT_CODE = PO.PRODUCT_CODE
        AND P.PRODUCT_CODE = #{productCode}

    </select>
    
        <select id="finalSellBidOrderPage" resultMap="productResultMap">
		SELECT 
		  P.PRODUCT_CODE,
		  P.PRODUCT_NAME,
		  P.PRODUCT_NAME_KR,
		  (SELECT O.PRODUCT_OPTION_COLOR
		   FROM PRODUCT_OPTION O
		   WHERE O.PRODUCT_OPTION_CODE = B.PRODUCT_OPTION_CODE) AS PRODUCT_OPTION_COLOR,
		  (SELECT O.PRODUCT_OPTION_SIZE
		   FROM PRODUCT_OPTION O
		   WHERE O.PRODUCT_OPTION_CODE = B.PRODUCT_OPTION_CODE) AS PRODUCT_OPTION_SIZE,
		  B.BUYING_ORDER_PRICE
		FROM PRODUCT P,
		     PRODUCT_OPTION PO,
		     BUYING_ORDERS B
		WHERE B.PRODUCT_OPTION_CODE = #{productOptionSize}
		  AND PO.PRODUCT_CODE = P.PRODUCT_CODE
		  AND B.BUYING_ORDER_CODE = #{buyingOrderCode}

    </select>
    <!--PRODUCT 테이블과 PRODUCT_OPTION 테이블을 INNER JOIN으로 조인하고,
    P.PRODUCT_CODE = 99 조건을 추가해 99번 상품 정보-->
    <select id="allFinalBuyBidOrderPage" resultMap="productResultMap">
        SELECT P.PRODUCT_CODE,
        P.PRODUCT_NAME,
        P.PRODUCT_NAME_KR,
        PO.PRODUCT_OPTION_COLOR,
        PO.PRODUCT_OPTION_SIZE
        FROM PRODUCT P
        INNER JOIN PRODUCT_OPTION PO
        ON P.PRODUCT_CODE = PO.PRODUCT_CODE
        WHERE P.PRODUCT_CODE = #{productCode}

    </select>
    
    	<!-- 주소록 조회 -->
	<select id="selectAddress" resultMap="addressResultMap">
		SELECT 
			  RECEIVER_NAME
			, ADDRESSES_POST_NO
			, ADDRESSES_NAME
			, ADDRESSES_ADDS
		FROM MEMBERS_ADDRESS
		WHERE MEMBERS_NO = #{ memberNo }
	</select>

        <!--    바잉오더와 프로덕트 이름, 등 첫번째 조회-->
    <select id="selectBuyingOrder" resultMap="productResultMap">
        SELECT P.PRODUCT_CODE, P.PRODUCT_NAME, P.PRODUCT_NAME_KR,
        O.PRODUCT_OPTION_SIZE, COALESCE(MAX(B.BUYING_ORDER_PRICE), 0) AS BUYING_ORDER_PRICE,
        B.BUYING_ORDER_CODE
        FROM PRODUCT P
        LEFT JOIN PRODUCT_OPTION O ON P.PRODUCT_CODE = O.PRODUCT_CODE
        LEFT JOIN BUYING_ORDERS B ON O.PRODUCT_OPTION_CODE = B.PRODUCT_OPTION_CODE
        WHERE P.PRODUCT_CODE = #{productCode}
        GROUP BY P.PRODUCT_CODE, P.PRODUCT_NAME, P.PRODUCT_NAME_KR, O.PRODUCT_OPTION_SIZE, B.BUYING_ORDER_PRICE, B.BUYING_ORDER_CODE
        ORDER BY O.PRODUCT_OPTION_SIZE ASC

    </select>



<!--  -->

    <!--입력(선택)으로 받은 buyingOrderNo에 해당하는 판매 주문서(BUYING_ORDERS)의 정보-->
    <select id="findBuyingProduct" resultMap="productResultMap">

        SELECT P.PRODUCT_CODE,
            p.PRODUCT_NAME,
            p.PRODUCT_NAME_KR,
            (SELECT o.PRODUCT_OPTION_COLOR
            FROM PRODUCT_OPTION o
            WHERE o.PRODUCT_OPTION_CODE = b.PRODUCT_OPTION_CODE) AS PRODUCT_OPTION_COLOR,
            (SELECT o.PRODUCT_OPTION_SIZE
            FROM PRODUCT_OPTION o
            WHERE o.PRODUCT_OPTION_CODE = b.PRODUCT_OPTION_CODE) AS PRODUCT_OPTION_SIZE,
            b.BUYING_ORDER_PRICE
            FROM PRODUCT p,
            PRODUCT_OPTION po,
            BUYING_ORDERS b
            WHERE b.BUYING_ORDER_CODE =  #{buyingOrderCode}
            AND po.PRODUCT_OPTION_CODE = b.PRODUCT_OPTION_CODE
            AND p.PRODUCT_CODE = po.PRODUCT_CODE


    </select>
    
    
        <select id="findProductOptionSizeSell" resultMap="productResultMap">
			SELECT P.PRODUCT_CODE,
			P.PRODUCT_NAME,
			P.PRODUCT_NAME_KR,
			PO.PRODUCT_OPTION_COLOR,
			PO.PRODUCT_OPTION_SIZE
			FROM PRODUCT P,
			PRODUCT_OPTION PO
			WHERE PO.PRODUCT_OPTION_SIZE = #{productOptionSize}
			AND P.PRODUCT_CODE = PO.PRODUCT_CODE
			AND P.PRODUCT_CODE = #{productCode}
    </select>




</mapper>