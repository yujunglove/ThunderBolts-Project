<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.greedy.thunderbolts.model.dao.MemberMapper">
	
	
	<resultMap id="membersResultMap" type="com.greedy.thunderbolts.model.dto.MembersDTO">
		<id property="membersNo" column="MEMBERS_NO"/>
		<result property="membersId" column="MEMBERS_ID"/>
		<result property="membersPwd" column="MEMBERS_PWD"/>
		<result property="membersTel" column="MEMBERS_TEL"/>
		<result property="membersRegDate" column="MEMBERS_REG_DATE"/>
		<result property="membersEntire" column="MEMBERS_ENTIRE"/>
	
		<!-- 1 대 다 관계로 memberDTO 1개에 memberRoleList는 여러개일수 있다.-->
		<collection property="authRoleList" resultMap="authRoleResultMap"/>
	</resultMap>


	<resultMap id="authRoleResultMap" type="com.greedy.thunderbolts.model.dto.AuthRoleDTO">
		<id property="membersNo" column="MEMBERS_NO"/>
		<result property="authNum" column="AUTH_NUM"/>
		<association property="auth" resultMap="authResultMap"/>

	</resultMap>
	
		<resultMap id="authResultMap" type="com.greedy.thunderbolts.model.dto.AuthDTO">
		<id property="num" column="AUTH_NUM"/>
		<result property="name" column="AUTH_NAME"/>
		<result property="ko" column="AUTH_KO"/>
	</resultMap>	


<select id="findByMemberId" resultMap="membersResultMap">
        SELECT
               A.MEMBERS_NO
		     , A.MEMBERS_ID
             , A.MEMBERS_PWD
		     , A.MEMBERS_TEL
		     , A.MEMBERS_REG_DATE
		     , A.MEMBERS_ENTIRE
		     , B.MEMBERS_NO REF_MEMBERS_NO
		     , B.AUTH_NUM REF_AUTH_NUM
		     , C.AUTH_NUM REF_AUTH_NUM
		     , C.AUTH_NAME
		     , C.AUTH_KO
          FROM MEMBERS A
          LEFT JOIN AUTH_ROLE B ON (A.MEMBERS_NO = B.MEMBERS_NO)
		  LEFT JOIN AUTH C ON (B.AUTH_NUM = C.AUTH_NUM)
         WHERE A.MEMBERS_ENTIRE = 'N'
           AND A.MEMBERS_ID = #{ memberId }
    </select>
    
    
    <select id="selectMembersById" resultType="string">
    	SELECT 
			   MEMBERS_ID
		  FROM MEMBERS
		 WHERE MEMBERS_ENTIRE = 'N'
		   AND MEMBERS_ID = #{ membersId } 
    </select>

	<insert id="insertMembers">

		INSERT 
		  INTO MEMBERS
		(
		  Members_No
        , Members_Name    
    	, Members_ID    
    	, Members_PWD    
    	, Members_Tel   
    	, Members_Reg_Date   
    	, Members_Entire 
		)
		VALUES
		(
		  SEQ_MEMBERS_NO.nextval
		, #{ membersName }
		, #{ membersId }
		, #{ membersPwd }
		, #{ membersTel }
		, SYSDATE
		, 'N'
		)

	</insert>

	<insert id="insertMembersRole">
		INSERT 
		  INTO AUTH_ROLE
		(
		  Members_No
        , AUTH_NUM    
		)
		VALUES
		(
		  SEQ_MEMBERS_NO.CURRVAL
		, 2
		)
	</insert>
	
	<select id="selectIdByTel" resultType="string">
		SELECT
		       MEMBERS_ID
          FROM MEMBERS
         WHERE MEMBERS_ENTIRE = 'N'
           AND MEMBERS_TEL = #{ membersTel }

	</select>
	
	<select id="findMemberbyIdTel" resultMap="membersResultMap">
		SELECT
               A.MEMBERS_NO
		     , A.MEMBERS_ID
             , A.MEMBERS_PWD
		     , A.MEMBERS_TEL
		     , A.MEMBERS_REG_DATE
		     , A.MEMBERS_ENTIRE
		     , B.MEMBERS_NO REF_MEMBERS_NO
		     , B.AUTH_NUM REF_AUTH_NUM
		     , C.AUTH_NUM REF_AUTH_NUM
		     , C.AUTH_NAME
		     , C.AUTH_KO
          FROM MEMBERS A
          LEFT JOIN AUTH_ROLE B ON (A.MEMBERS_NO = B.MEMBERS_NO)
		  LEFT JOIN AUTH C ON (B.AUTH_NUM = C.AUTH_NUM)
         WHERE A.MEMBERS_ENTIRE = 'N'
           AND A.MEMBERS_ID = #{ membersId }
           AND A.MEMBERS_TEl = #{ membersTel }
	
	</select>

</mapper>